openapi: 3.0.0
info:
  title: TRAVO API
  description: API for TRAVO travel platform
  version: 0.1.0

servers:
  - url: http://localhost:8000
    description: Development server
  - url: https://api.travo.com
    description: Production server

paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users
    post:
      summary: Create a new user
      responses:
        '201':
          description: User created successfully

  /users/{userId}:
    get:
      summary: Get user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details

  /recommendations:
    get:
      summary: Get travel recommendations
      parameters:
        - name: userId
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: categories
          in: query
          schema:
            type: array
            items:
              type: string
          description: Categories of interest (e.g., Pyramids, Museums)
        - name: city
          in: query
          schema:
            type: string
          description: City filter (e.g., Cairo, Alexandria)
      responses:
        '200':
          description: List of recommendations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recommendation'

  /crowd-predictions:
    get:
      summary: Get crowd predictions
      parameters:
        - name: locationId
          in: query
          required: true
          schema:
            type: string
        - name: date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Crowd prediction data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrowdPrediction'
                
  /crowd-heatmap:
    get:
      summary: Get crowd heatmap data for multiple locations
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: time
          in: query
          required: true
          schema:
            type: string
            format: time
      responses:
        '200':
          description: Crowd heatmap data for multiple locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HeatmapDataPoint'

  /vision/identify:
    post:
      summary: Identify landmark from image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Identification results

  /assistant/query:
    post:
      summary: Query the travel assistant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                userId:
                  type: string
      responses:
        '200':
          description: Assistant response

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        preferences:
          type: object

    Recommendation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          type: object
          properties:
            city:
              type: string
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                longitude:
                  type: number
        rating:
          type: number
        image_url:
          type: string
        categories:
          type: array
          items:
            type: string

    CrowdPrediction:
      type: object
      properties:
        locationId:
          type: string
        date:
          type: string
          format: date
        hourlyPredictions:
          type: array
          items:
            type: object
            properties:
              hour:
                type: integer
              crowdLevel:
                type: string
              confidence:
                type: number
                
    HeatmapDataPoint:
      type: object
      properties:
        locationId:
          type: string
        name:
          type: string
        coordinates:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
        crowdLevel:
          type: string
          enum: [low, medium, high, very_high]
        intensity:
          type: number
          description: Normalized crowd intensity value (0-1)
